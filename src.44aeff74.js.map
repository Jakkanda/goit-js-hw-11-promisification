{"version":3,"sources":["js/task1.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":";AAQO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,WAAA,EARA,IAAMA,EAAQ,SAAAC,GACZ,OAAA,IAAIC,QAAQ,SAAAC,GACjBC,WAAW,WACTD,EAAQF,IACPA,MAIA,QAAA,MAAA,EAAA,IAAMI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,SAAnB,QAAA,OAAA;;ACHmB,aAL1B,IAAA,EAAA,QAAA,eAGA,EAAM,EAAA,OAAA,KAAMG,KAAKJ,EAAjB,SACA,EAAM,EAAA,OAAA,KAAMI,KAAKJ,EAAjB,SACA,EAAM,EAAA,OAAA,MAAMI,KAAKJ,EAAjB","file":"src.44aeff74.js","sourceRoot":"../src","sourcesContent":["export const delay = ms => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(ms);\n    }, ms);\n  });\n};\n\nexport const logger = time => console.log(`Resolved after ${time} ms`);\n","import { delay, logger } from './js/task1';\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n"]}